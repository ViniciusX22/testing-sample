{
	"info": {
		"_postman_id": "1c7e6d29-7884-41df-ba91-7b6780238191",
		"name": "Postman & Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Trello Member Boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ab2b0b6-be5f-498e-9aba-7d28ca2aba0d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/members/{{username}}/boards?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"members",
						"{{username}}",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				},
				"description": "Get the public boards of a specific member"
			},
			"response": []
		},
		{
			"name": "Trello Board Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edfc3926-6217-49c5-a1ec-79189ed24eac",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set('trelloBoardId', pm.response.json().id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/boards/?name=Board via API&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Board via API"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Creates a board on Trello"
			},
			"response": []
		},
		{
			"name": "Create TODO List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54f61e-507b-4400-bae0-439fef9e0024",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json()",
							"",
							"pm.test('Name is equal to TODO', function(){",
							"    pm.expect(json.name).to.equal('TODO')",
							"})",
							"",
							"pm.test('Status is not closed', function(){",
							"    pm.expect(json.closed).to.equal(false)",
							"})",
							"",
							"pm.environment.set('TODOListId', json.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/lists/?name=TODO&idBoard={{trelloBoardId}}&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{trelloBoardId}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Creates a TODO List on the newly created Board"
			},
			"response": []
		},
		{
			"name": "Create DONE List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54f61e-507b-4400-bae0-439fef9e0024",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json()",
							"",
							"pm.test('Name is equal to DONE', function(){",
							"    pm.expect(json.name).to.equal('DONE')",
							"})",
							"",
							"pm.test('Status is not closed', function(){",
							"    pm.expect(json.closed).to.equal(false)",
							"})",
							"",
							"pm.test('Created on correct Board', function (){",
							"    pm.expect(json.idBoard).to.equal(pm.environment.get('trelloBoardId'))",
							"})",
							"",
							"pm.environment.set('DONEListId', json.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/lists/?name=DONE&idBoard={{trelloBoardId}}&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{trelloBoardId}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Creates a DONE List on the newly created Board"
			},
			"response": []
		},
		{
			"name": "Create That's a Bug card",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54f61e-507b-4400-bae0-439fef9e0024",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json()",
							"",
							"pm.test('Name is equal to That\\'s a Bug', function(){",
							"    pm.expect(json.name).to.equal(\"That's a Bug\")",
							"})",
							"",
							"pm.test('Created on correct List', function (){",
							"    pm.expect(json.idList).to.equal(pm.environment.get('TODOListId'))",
							"})",
							"",
							"pm.test('Created on correct Board', function (){",
							"    pm.expect(json.idBoard).to.equal(pm.environment.get('trelloBoardId'))",
							"})",
							"",
							"pm.test(\"No votes nor attachments\", function(){",
							"    pm.expect(json.badges.votes).to.equal(0)",
							"    ",
							"    const attachments = JSON.parse(json.badges.attachments)",
							"    for (const attachment in attachments) {",
							"        pm.expect(attachment.board).to.equal(0)",
							"        pm.expect(attachment.card).to.equal(0)",
							"    }",
							"})",
							"",
							"pm.environment.set('ThatsABugCardId', json.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/cards/?name=That's a Bug&idList={{TODOListId}}&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"cards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "That's a Bug"
						},
						{
							"key": "idList",
							"value": "{{TODOListId}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Creates a \"That's a Bug\" List on the TODO List"
			},
			"response": []
		},
		{
			"name": "Move That's a Bug card",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54f61e-507b-4400-bae0-439fef9e0024",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json()",
							"",
							"pm.test('Moved to correct List', function (){",
							"    pm.expect(json.idList).to.equal(pm.environment.get('DONEListId'))",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/cards/{{ThatsABugCardId}}/?idList={{DONEListId}}&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"cards",
						"{{ThatsABugCardId}}",
						""
					],
					"query": [
						{
							"key": "idList",
							"value": "{{DONEListId}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Move That's a Bug card from TODO to DONE"
			},
			"response": []
		},
		{
			"name": "Invalid - Move inexistent card Numeric ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54f61e-507b-4400-bae0-439fef9e0024",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/cards/654613546542/?idList={{DONEListId}}&token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"cards",
						"654613546542",
						""
					],
					"query": [
						{
							"key": "idList",
							"value": "{{DONEListId}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Tries to move card of inexistent ID"
			},
			"response": []
		},
		{
			"name": "Trello Board Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edfc3926-6217-49c5-a1ec-79189ed24eac",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.unset('trelloBoardId')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/boards/{{trelloBoardId}}/?token={{trelloToken}}&key={{trelloKey}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{trelloBoardId}}",
						""
					],
					"query": [
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						}
					]
				},
				"description": "Deletes a board on Trello"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "be610c5f-85fa-4187-8d30-122366f651a2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7d7bc659-3214-4166-abf2-002f83678398",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "6312b343-6840-4b8a-bb1f-76c0beffc1d6",
			"key": "username",
			"value": "viniciusxavier25",
			"type": "string"
		},
		{
			"id": "67c4cec2-c813-4bb8-afb5-518c00e81d7e",
			"key": "trelloAPIURL",
			"value": "https://api.trello.com",
			"type": "string"
		},
		{
			"id": "184a5545-8c88-47b0-b2b8-800855cfbd35",
			"key": "trelloKey",
			"value": "086bb46870359ef3dffe83691d1dff59",
			"type": "string"
		},
		{
			"id": "f005b088-5e82-4a22-927b-07d7b31c0d9a",
			"key": "trelloToken",
			"value": "031e52e8f09f79107f820bb0d15abba64ca250e0005dc3de38ac755a22423443",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}